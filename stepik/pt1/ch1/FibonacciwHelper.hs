{-
Реализация функции для вычисления числа Фибоначчи, основанная на прямом рекурсивном определении, крайне неэффективна - количество вызовов функции растет экспоненциально с ростом значения аргумента. 
GHCi позволяет отслеживать использование памяти и затраты времени на вычисление выражения, для этого следует выполнить команду :set +s:

GHCi> :set +s
GHCi> fibonacci 30
832040
(8.36 secs, 298293400 bytes)

С помощью механизма аккумуляторов попробуйте написать более эффективную реализацию, имеющую линейную сложность (по числу рекурсивных вызовов). Как и в предыдущем задании, функция должна быть определена для всех целых чисел.
-}

fibonacci n | n == 0 = 0
       | n == 1 = 1
       | n == -1 = 1
       | n > 1 = helper1 0 1 n
       | n < -1 = helper2 0 1 n
       | otherwise = error "error"

helper1 f s n | n == 1 = s
                 | otherwise = helper1 s (f+s) (n-1)

helper2 f s n | n == 0 = f
              | otherwise = helper2 s (f - s) (n + 1)